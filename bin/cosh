#!/bin/sh
# command launcher for cosher stack on swarm mode

cosh(){
  loadenv(){
    SUDOING=${SUDOING:+true}
    test -z "$ONETIME" || unset ONETIME
    MODULE_OPTION_DEFAULT_DESC="<command>"
    MODULE_SUBCOMMAND_DEFAULT_DESC=
    test -z ${cosh_container} && setvar cosh_container \. || setvar cosh_container $cosh_container
    test -z ${cosh_user} && setvar cosh_user duser || setvar cosh_user $cosh_user
    test -z ${cosh_home} && setvar cosh_home /home/duser || setvar cosh_home $cosh_home

    : ${COSH_APP_PREPEND:=coshapp}

    COSH_DEFAULT_IMAGE_VAR=10.5
    COSH_DEFAULT_IMAGE_TAG=debian-l10n-ja
    COSH_DEFAULT_APP_NAME=firefox
    COSH_DEFAULT_APP_IMAGE="${COSH_APP_PREPEND:?COSH_APP_PREPEND not set!}/${COSH_DEFAULT_APP_NAME}:${COSH_DEFAULT_IMAGE_TAG:?image base not set}-${COSH_DEFAULT_IMAGE_VAR:?image version not set}"

    sanitize "$COSH_APP_PREPEND" "$COSH_DEFAULT_APP_IMAGE"
  }

  #SHELIB_OPTIONS
  parseopts(){
    case $1 in 
    -c) #container
    ##specify target container
      shift; set_container $1; shiftstack 1 $@
      ;;
    -u) #username
    ##specify target user
      shift; set_user $1; shiftstack 1 $@
      ;;
    -v) #volume #mountpoint
    ##specify docker volume to mount
      shift; set_volume $1 $2; shiftstack 2 $@
      ;;
    -o|--onetime)
    ##make temporary container to execute commands
      ONETIME=true
      shift;
      launch_temporary_container $@
      shiftstack 1 $@
      ;;
    -*) showhelp $0; throw unknown option $1 ;;
    *) return 1 ;;
    esac
  }
  #SHELIB_OPTIONS


  #SHELIB_SUBCOMMANDS
  parseargs(){ 
    case $1 in
    list) 
    ##list container
      list_container; exit ;;
    images) 
    ##list container images
      list_images; exit ;;
    help) #[--all] 
    ##show this help
      showhelp ${2:---short}; exit ;;
    *) set_file $1 || set_cmd $@ || set_shell;;
    esac

  }
  #SHELIB_SUBCOMMANDS

  execute(){
    chk_active_container
    execute_in_container || return 1;
  }


}

if test ${0##*/} = cocosh; then cook cosh -c dom1 cosh $@;
else cook cosh $@; fi
