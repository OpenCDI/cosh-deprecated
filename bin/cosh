#!/bin/sh
# command launcher for cosher stack on swarm mode

cosh(){
  loadenv(){
    #: ${DOCKER_HOST:?DOCKER_HOST not set!}
    SUDOING=${SUDOING:+true}
    test -z "$ONETIME" || unset ONETIME
    MODULE_OPTION_DEFAULT_DESC="<command>"
    MODULE_SUBCOMMAND_DEFAULT_DESC=
    test -z ${cosh_container} && setvar cosh_container \. || setvar cosh_container $cosh_container
    test -z ${cosh_user} && setvar cosh_user duser || setvar cosh_user $cosh_user
    test -z ${cosh_home} && setvar cosh_home /home/duser || setvar cosh_home $cosh_home
    test -z ${cosh_network} && setvar cosh_network cdi_open || setvar cosh_home $cosh_home

    COSH_APP_PREPEND=${COSH_APP_PREPEND:-coshapp}

    COSH_DEFAULT_IMAGE_VER=10.7
    COSH_DEFAULT_IMAGE_TAG=debian-l10n-ja
    COSH_DEFAULT_APP_NAME=firefox
    COSH_DEFAULT_APP_IMAGE="${COSH_APP_PREPEND:?COSH_APP_PREPEND not set!}/${COSH_DEFAULT_APP_NAME}:${COSH_DEFAULT_IMAGE_TAG:?image base not set}-${COSH_DEFAULT_IMAGE_VER:?image version not set}"

    sanitize "$COSH_APP_PREPEND" "$COSH_DEFAULT_APP_IMAGE"
  }

  #SHELIB_OPTIONS
  parseopts(){
    case $1 in
    -c) #container
    ##specify target container
      set_container $@;;
    -u) #username
    ##specify target user
      set_user $@;;
    -f) #file
    ##specify cosh script for the execution
      set_file $2;;
    -n|--network) #id
    ##specify network bridge
      set_network $1;;
    -D|--data) #volume
    ##specify docker volume to mount
      set_volume $@ ;;
    -o|--oneshot) #[cmd]
    ##make temporary container to execute commands
      ONETIME=true
      launch_temporary_container $@
      ;;
    -*) showhelp $0; throw unknown option $1 ;;
    *) return 1 ;;
    esac
  }
  #SHELIB_OPTIONS


  #SHELIB_SUBCOMMANDS
  parseargs(){
    case $1 in
    list) #[-l|-a]
    ##list container
      list_container $2; exit ;;
    images) #[-f]
    ##list container images
      list_images; exit ;;
    copy) #[pod:]<path>
    ##copy a file from/to container
      cosh_copy $@ ;;
    info) #<pod>
    ##show detailed information about the pod
      cosh_info $@;;
    help) #[--all]
    ##show this help
      showhelp ${2:---short}; exit ;;
    *) set_stdin $@ || set_cmd $@ || set_shell;;
    esac

  }
  #SHELIB_SUBCOMMANDS

  execute(){
    chk_active_container
    execute_in_container || return 1;
  }


}

case ${0##*/} in
  cocosh) cook cosh -c dom1 cosh $@;;
  cosh) cook cosh $@;;
  *) : ;;
esac
